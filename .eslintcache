[{"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\index.js":"1","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\App.js":"2","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\index.js":"3","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\helpers\\PrivateRoute.js":"4","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\About.js":"5","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Courses.js":"6","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Help.js":"7","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Services.js":"8","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Home.js":"9","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Cart.js":"10","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Support.js":"11","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\authentication\\Login.js":"12","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\authentication\\Register.js":"13","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestList.js":"14","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\authentication\\Logout.js":"15","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\PackageList.js":"16","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestScreen.js":"17","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestResult.js":"18","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\dashboard\\Dashboard.js":"19","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\authReducer.js":"20","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userPackagesReducer.js":"21","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userTestReducer.js":"22","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userAttemptDetailsReducer.js":"23","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userQuestionReducer.js":"24","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userTestResultReducer.js":"25","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userAttemptReducer.js":"26","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userTestsReducer.js":"27","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\grandTestsReducer.js":"28","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userQuestionsReducer.js":"29","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\cartReducers.js":"30","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestQuestion.js":"31","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\layouts\\pages\\PageLayout.js":"32","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\layouts\\dashboard\\DashboardLayout.js":"33","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\layouts\\auth\\AuthLayout.js":"34","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Loader\\LottiesLoader.js":"35","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Loader\\LottiesContentLoader.js":"36","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Timer\\Timer.js":"37","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\actions\\types.js":"38","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\actions\\index.js":"39","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Loader\\LottiesMultiContentLoader.js":"40","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\helpers\\methods.js":"41","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\sidebar\\Sidebar.js":"42","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\DropdownMenu\\DropdownMenu.js":"43","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\api\\medico.js":"44","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\hooks\\useDetectOutsideClick.js":"45","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Counselling.js":"46","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Test.js":"47"},{"size":1020,"mtime":1629457333502,"results":"48","hashOfConfig":"49"},{"size":3696,"mtime":1630077875404,"results":"50","hashOfConfig":"49"},{"size":1072,"mtime":1629457333511,"results":"51","hashOfConfig":"49"},{"size":770,"mtime":1629457333430,"results":"52","hashOfConfig":"49"},{"size":246,"mtime":1629457333452,"results":"53","hashOfConfig":"49"},{"size":8164,"mtime":1629457333468,"results":"54","hashOfConfig":"49"},{"size":3384,"mtime":1629457333469,"results":"55","hashOfConfig":"49"},{"size":255,"mtime":1629457333472,"results":"56","hashOfConfig":"49"},{"size":18993,"mtime":1630310102509,"results":"57","hashOfConfig":"49"},{"size":5166,"mtime":1629893201189,"results":"58","hashOfConfig":"49"},{"size":3593,"mtime":1629457333483,"results":"59","hashOfConfig":"49"},{"size":2870,"mtime":1629457333394,"results":"60","hashOfConfig":"49"},{"size":3968,"mtime":1629457333397,"results":"61","hashOfConfig":"49"},{"size":1760,"mtime":1629457333492,"results":"62","hashOfConfig":"49"},{"size":419,"mtime":1629457333395,"results":"63","hashOfConfig":"49"},{"size":847,"mtime":1629457333491,"results":"64","hashOfConfig":"49"},{"size":5806,"mtime":1629457333499,"results":"65","hashOfConfig":"49"},{"size":4811,"mtime":1629457333498,"results":"66","hashOfConfig":"49"},{"size":25928,"mtime":1629457333428,"results":"67","hashOfConfig":"49"},{"size":452,"mtime":1629457333505,"results":"68","hashOfConfig":"49"},{"size":681,"mtime":1629457333516,"results":"69","hashOfConfig":"49"},{"size":646,"mtime":1629457333520,"results":"70","hashOfConfig":"49"},{"size":926,"mtime":1629457333513,"results":"71","hashOfConfig":"49"},{"size":665,"mtime":1629457333517,"results":"72","hashOfConfig":"49"},{"size":481,"mtime":1629457333521,"results":"73","hashOfConfig":"49"},{"size":485,"mtime":1629457333515,"results":"74","hashOfConfig":"49"},{"size":786,"mtime":1629457333522,"results":"75","hashOfConfig":"49"},{"size":559,"mtime":1629457333508,"results":"76","hashOfConfig":"49"},{"size":1361,"mtime":1629457333518,"results":"77","hashOfConfig":"49"},{"size":1335,"mtime":1629457333507,"results":"78","hashOfConfig":"49"},{"size":3550,"mtime":1629457333494,"results":"79","hashOfConfig":"49"},{"size":3364,"mtime":1629905213895,"results":"80","hashOfConfig":"49"},{"size":4376,"mtime":1629457333421,"results":"81","hashOfConfig":"49"},{"size":1131,"mtime":1629457333418,"results":"82","hashOfConfig":"49"},{"size":559,"mtime":1629457333409,"results":"83","hashOfConfig":"49"},{"size":580,"mtime":1629457333408,"results":"84","hashOfConfig":"49"},{"size":1741,"mtime":1629457333413,"results":"85","hashOfConfig":"49"},{"size":2465,"mtime":1629457333385,"results":"86","hashOfConfig":"49"},{"size":10058,"mtime":1629457333383,"results":"87","hashOfConfig":"49"},{"size":601,"mtime":1629457333411,"results":"88","hashOfConfig":"49"},{"size":130,"mtime":1629457333432,"results":"89","hashOfConfig":"49"},{"size":1652,"mtime":1629457333489,"results":"90","hashOfConfig":"49"},{"size":1526,"mtime":1629457333404,"results":"91","hashOfConfig":"49"},{"size":215,"mtime":1629457333387,"results":"92","hashOfConfig":"49"},{"size":840,"mtime":1629457333416,"results":"93","hashOfConfig":"49"},{"size":5347,"mtime":1630068661589,"results":"94","hashOfConfig":"49"},{"size":1329,"mtime":1630081247349,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"xo6bx5",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\index.js",[],["199","200"],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\App.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\index.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\helpers\\PrivateRoute.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\About.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Courses.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Help.js",["201","202","203"],"import React, { useState } from 'react';\r\nimport PageLayout from '../common/layouts/pages/PageLayout';\r\nimport { Link } from 'react-router-dom';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import {helpSupport} from '../../actions';\r\n\r\nfunction Help({ history }) {\r\n  // const dispatch = useDispatch();\r\n    const [subject,setSubject]=useState(\"\")\r\n    const [description,setDescription]=useState(\"\")\r\n    const [attachement,setAttachement]=useState(\"\")\r\n\r\n  //const dispatch = useDispatch();\r\n\r\n  // const { authenticated } = useSelector((state) => state.auth);\r\n  // const { token, user } = authenticated;\r\n  \r\n  if(JSON.parse(localStorage.getItem(\"user\")) == undefined || JSON.parse(localStorage.getItem(\"user\")) ==  null){\r\n    history.push(`${process.env.PUBLIC_URL}/dashboard`);\r\n  } \r\n  \r\n\r\n  // function AsendQuery(id){\r\n  //   if (token) {\r\n  //     dispatch(helpSupport(token, id));\r\n  //     history.push(`${process.env.PUBLIC_URL}/support`);\r\n  //   } else {\r\n  //     history.push(`${process.env.PUBLIC_URL}/login?redirect=help`);\r\n  //   }\r\n  // } \r\n        \r\n       \r\n\r\n        // console.warn(userid)\r\n\r\n        async function sendQuery() {\r\n          let user_id = JSON.parse(localStorage.getItem(\"user\")).id;\r\n          let item = {user_id, subject, description, attachement}\r\n          //console.warn(item);\r\n            // const formData = new FormData();\r\n            // formData.append('userid', userid);\r\n            // formData.append('question', inputbox);\r\n           \r\n            let result = await fetch(\"http://localhost:8000/api/userquery/\", {\r\n        \r\n              method: 'POST',\r\n              body: JSON.stringify(item),\r\n              \r\n              headers:{\r\n                \"Content-Type\":'application/json',\r\n                \"Accept\":'application/json'\r\n              }\r\n            })\r\n             result = await result.json();\r\n\r\n             if (result['success'] == true) {\r\n            //  dispatch(support(user_id));\r\n              history.push(`${process.env.PUBLIC_URL}/support`);\r\n            } else {\r\n              history.push(`${process.env.PUBLIC_URL}/login?redirect=help`);\r\n            }\r\n            \r\n        \r\n        }\r\n\r\n  return (\r\n    \r\n    <PageLayout>\r\n    <div className='container'>\r\n    <Link className='float-right btn btn-primary' to={`${process.env.PUBLIC_URL}/support`}>View Ticket</Link>\r\n      <h1 className='text-center'>Need help ?</h1>\r\n        <div className=\"col-sm-6 offset-sm-3 mt-2\">\r\n         \r\n            <label className=\"font-weight-bold\" htmlFor=\"subject\">Subject</label>\r\n            <input  type=\"text\" id=\"subject\" name=\"subject\" className=\"form-control\" value={subject} onChange={(e) => setSubject(e.target.value)} placeholder=\"Subject\" /><br></br>\r\n            <label className=\"font-weight-bold\" htmlFor=\"message\">Description</label>\r\n            <textarea className=\"form-control\" id=\"message\" name=\"description\" rows=\"6\" cols=\"15\" value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\"></textarea><br></br>\r\n            {/* <label className=\"font-weight-bold\" htmlFor=\"file\">Attachement</label><br></br> */}\r\n            \r\n            <button className=\"btn btn-primary mt-4\" onClick={() => sendQuery()} >Submit</button>\r\n          \r\n        </div>\r\n    </div>\r\n    \r\n     </PageLayout> \r\n\r\n  );\r\n}\r\n\r\nexport default Help;\r\n","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Services.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Home.js",["204","205","206","207","208","209","210","211"],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Cart.js",["212","213","214","215","216","217","218","219","220"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DashboardLayout from '../common/layouts/dashboard/DashboardLayout';\r\nimport { buyUserPackage, removeItemFromCart } from '../../actions';\r\nimport LottiesLoader from '../common/custom/Loader/LottiesLoader';\r\nimport { Button, ListGroup, ListGroupItem, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Cart({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { authenticated } = useSelector((state) => state.auth);\r\n  const { token } = authenticated;\r\n\r\n  const { loading, items } = useSelector((state) => state.cart);\r\n\r\n  if(JSON.parse(localStorage.getItem(\"user\")) == null){\r\n    history.push(`${process.env.PUBLIC_URL}/login`);\r\n  }\r\n  // function buyPackage(id) {\r\n  //   if (token) {\r\n  //     dispatch(buyUserPackage(token, id));\r\n  //     history.push(`${process.env.PUBLIC_URL}/dashboard`);\r\n  //   } else {\r\n  //     history.push(`${process.env.PUBLIC_URL}/login?redirect=cart`);\r\n  //   }\r\n  // }\r\n\r\n  function calculateCartAmount() {\r\n    return items.reduce((total, item) => {\r\n      return (parseFloat(total) + parseFloat(item.price)).toFixed(2);\r\n    }, 0);\r\n  }\r\n\r\n  function removeFromCart(id) {\r\n    dispatch(removeItemFromCart(id));\r\n  }\r\n\r\n\r\n  // let Data = JSON.parse(localStorage.getItem(\"user\")).name;\r\n  //let packData = JSON.parse(localStorage.getItem(\"cart\")).items.name;\r\n\r\n \r\n  //  console.warn(packData);\r\n   \r\n  const [pid, setPid] = useState(\"\");\r\n  const [studentid, setStudentid] = useState(\"\");\r\n  const [amount, setAmount] = useState(calculateCartAmount());\r\n  const [status, setStatus] = useState(\"1\");\r\n   \r\n  async function buyPackage(id) {\r\n    // if (token) {\r\n      // dispatch(buyUserPackage(token, id));\r\n    let Data = JSON.parse(localStorage.getItem(\"user\")).name;\r\n    let packData = JSON.parse(localStorage.getItem(\"cart\")).items.name;\r\n    let prices = JSON.parse(localStorage.getItem(\"cart\")).items.price;\r\n\r\n    console.warn(packData);\r\n    console.warn(prices);\r\n\r\n    console.warn(Data);\r\n\r\n    const formData = new FormData();\r\n    formData.append('pid', packData);\r\n    formData.append('studentid', Data);\r\n    formData.append('amount', amount);\r\n    formData.append('status', status);\r\n    let result = await fetch(\"http://localhost:8000/api/payment/\", {\r\n      \r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    \r\n      // history.push(`${process.env.PUBLIC_URL}/dashboard`);\r\n    // } else {\r\n      // history.push(`${process.env.PUBLIC_URL}/login?redirect=cart`);\r\n    // }\r\n  }\r\n  return (\r\n    <DashboardLayout>\r\n      <section className='secc'>\r\n        <div className='container'>\r\n          {loading ? (\r\n            <LottiesLoader />\r\n          ) : items.length ? (\r\n            <div className='row'>\r\n              <div className='col-md-8'>\r\n                <div className='dash-achiv p-3' style={{ borderRadius: 8 }}>\r\n                  <Link to={`${process.env.PUBLIC_URL}/courses`}>\r\n                    Add More Package\r\n                  </Link>\r\n                  <Table striped>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {items.map((item, idx) => (\r\n                        <tr key={item.id}>\r\n                          <td>{idx + 1}</td>\r\n                          <td>{item.name}</td>\r\n                          <td>{item.price.toFixed(2)}</td>\r\n                          <td>\r\n                            <Button\r\n                              outline\r\n                              color='danger'\r\n                              size='sm'\r\n                              onClick={() => removeFromCart(item.id)}\r\n                            >\r\n                              <i className='fa fa-times'></i>\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              </div>\r\n              <div className='col-md-4'>\r\n                <div className='dash-achiv p-3' style={{ borderRadius: 8 }}>\r\n                  <ListGroup flush>\r\n                    <ListGroupItem>\r\n                      <strong>Total:</strong> {calculateCartAmount()}\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                  {/* onClick={()=>buyPackage(items)} */}\r\n                  <Button color='info'  onClick= {()=>buyPackage(items)} >\r\n                    Buy Packages\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p className='text-center'>\r\n              No Items in the cart{' '}\r\n              <Link to={`${process.env.PUBLIC_URL}/courses`}>Shop Now</Link>\r\n            </p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Support.js",["221","222","223","224","225","226","227"],"import React, { useEffect, useState } from 'react';\r\nimport PageLayout from '../common/layouts/pages/PageLayout';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LottiesLoader from '../common/custom/Loader/LottiesLoader';\r\nimport PropTypes from 'prop-types';\r\nimport Login from '../authentication/Login';\r\nimport { Link } from 'react-router-dom';\r\nimport { support } from '../../actions';\r\n// import { useLayoutEffect } from 'react';\r\n\r\n    Support.propTypes = {\r\n        TicketList: PropTypes.array,\r\n       \r\n    };\r\n    Support.defaulProps = {\r\n        TicketList: [],\r\n        loading: true\r\n    };\r\n\r\nfunction Support({history}) {\r\n\r\n    const dispatch = useDispatch();\r\n   \r\n    \r\n    // const { loading } = useSelector((state) => state.support);\r\n    const { authenticated } = useSelector((state) => state.auth);\r\n    const { token } = authenticated;\r\n    \r\n    if(JSON.parse(localStorage.getItem(\"user\")) == undefined || JSON.parse(localStorage.getItem(\"user\")) ==  null){\r\n        history.push(`${process.env.PUBLIC_URL}/dashboard`);\r\n      } \r\n//     function supporthelp(id){\r\n//     if (token) {\r\n//         dispatch(support(token,id));\r\n//         history.push(`${process.env.PUBLIC_URL}/dashboard`);\r\n//       } else {\r\n//         history.push(`${process.env.PUBLIC_URL}/login?redirect=support`);\r\n//       }\r\n//    }\r\n\r\n//    const {TicketList} = props;\r\n    //   const { loading } = useSelector((state) => state.support);\r\n  \r\n   \r\n   \r\n    // console.log('user_id' + id );\r\n    const [TicketList, setTicketList, loading] = useState([]);\r\n   \r\n    \r\n     useEffect(() => {\r\n        async function fetchTicketList() {\r\n\r\n            try {\r\n                let user_id = JSON.parse(localStorage.getItem(\"user\")).id;\r\n                const responseUrl = 'http://localhost:8000/api/userquery/'+ user_id + '/';\r\n                const response = await fetch(responseUrl);\r\n                const responseJson = await response.json();\r\n                console.log(responseJson);\r\n                setTicketList(responseJson);\r\n            } catch{\r\n\r\n            }\r\n        }\r\n        fetchTicketList();\r\n    }, []);\r\n\r\n    return (\r\n        <PageLayout>\r\n            {/* <section className='secc'> */}\r\n                <div class=\"container\">\r\n                {loading ? (\r\n                    <LottiesLoader />\r\n                ) :\r\n                TicketList.length ? (\r\n                <table class=\"table table-bordered mt-4\">\r\n                    <tr>\r\n                        <th>Ticket ID</th>\r\n                        {/* <th>Name</th> */}\r\n                        <th>Subject</th>\r\n                        <th>Response</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                    {TicketList.map((ticket) => (\r\n                    <tr>\r\n                        <td>{ticket.ticket_id}</td>\r\n                        {/* <td>{ticket.name}</td> */}\r\n                        <td>{ticket.subject}</td>\r\n                        <td>{ticket.reply}</td>\r\n                        <td>{ticket.active == 1 ? 'Active' : 'Not Active'}</td>\r\n                    </tr>\r\n                    ))}\r\n                </table>\r\n                ): (\r\n                    <p className='text-center'>\r\n                        No Ticket found {' '}\r\n                        <Link to={`${process.env.PUBLIC_URL}/help`}>Ask for help</Link>\r\n                    </p>\r\n            \r\n                // )}\r\n                 )}\r\n                </div>\r\n    \r\n            {/* </section> */}\r\n        </PageLayout>\r\n      \r\n    )\r\n}\r\n\r\nexport default Support;\r\n","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\authentication\\Login.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\authentication\\Register.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestList.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\authentication\\Logout.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\PackageList.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestScreen.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestResult.js",["228"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Chart from 'react-google-charts';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTestResult } from '../../actions';\r\nimport DashboardLayout from '../common/layouts/dashboard/DashboardLayout';\r\n\r\nfunction TestResult({ match }) {\r\n  const { id } = match.params;\r\n  const dispatch = useDispatch();\r\n  const { authenticated } = useSelector((state) => state.auth);\r\n  const { token } = authenticated;\r\n\r\n  const { result } = useSelector((state) => state.userTestResult);\r\n\r\n  const percentage = ((result.correct / result.total) * 100).toFixed(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTestResult(token, id));\r\n  }, [dispatch, token, id]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <section className='secc'>\r\n        <div className='container'>\r\n          <h4>Bulletin Board</h4>\r\n          <div className='row'>\r\n            <div className='col-md-5'>\r\n              <div className='dash-achiv p-3' style={{ borderRadius: 8 }}>\r\n                <h3>Your Progress</h3>\r\n                <Chart\r\n                  width={'400px'}\r\n                  height={'400px'}\r\n                  chartType='PieChart'\r\n                  loader={<div>Loading Your Progress</div>}\r\n                  data={[\r\n                    ['Type', 'Performance'],\r\n                    ['Correct', result.correct],\r\n                    ['Incorrect', result.incorrect],\r\n                  ]}\r\n                  options={{\r\n                    title: 'Test Progress',\r\n                    pieHole: 0.35,\r\n                    colors: ['#3FE2D1', '#636363'],\r\n                  }}\r\n                  rootProps={{ 'data-testid': '2' }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='col-md-7'>\r\n              <div className='dash-achiv p-3' style={{ borderRadius: 8 }}>\r\n                <div className='d-flex justify-content-between p-1'>\r\n                  <h4>Total Question</h4>\r\n                  <h4>{result.total}</h4>\r\n                </div>\r\n\r\n                <div\r\n                  className='d-flex justify-content-between p-2 my-2'\r\n                  style={{ background: '#63C2FC', color: 'white' }}\r\n                >\r\n                  <strong>Attempted Question</strong>\r\n                  <strong>{result.attempt}</strong>\r\n                </div>\r\n\r\n                <div\r\n                  className='d-flex justify-content-between p-2 my-2'\r\n                  style={{ background: '#429DD4', color: 'white' }}\r\n                >\r\n                  <strong>Not Attempted Question</strong>\r\n                  <strong>{result.not_attempt}</strong>\r\n                </div>\r\n\r\n                <div\r\n                  className='d-flex justify-content-between p-2 my-2'\r\n                  style={{ background: '#2780B8', color: 'white' }}\r\n                >\r\n                  <strong>Right Answer</strong>\r\n                  <strong>{result.correct}</strong>\r\n                </div>\r\n\r\n                <div\r\n                  className='d-flex justify-content-between p-2 my-2'\r\n                  style={{ background: '#176798', color: 'white' }}\r\n                >\r\n                  <strong>Wrong Answer</strong>\r\n                  <strong>{result.incorrect}</strong>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dash-achiv p-3' style={{ borderRadius: 8 }}>\r\n                <div\r\n                  className='d-flex justify-content-between p-2 my-2'\r\n                  style={{ background: '#E7E7E7', color: '#333' }}\r\n                >\r\n                  <strong>Percentage</strong>\r\n                  <strong>{percentage}%</strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default TestResult;\r\n\r\n// {\r\n//   details &&\r\n//     details.map((detail, idx) => {\r\n//       return (\r\n//         <div class='col-md-12'>\r\n//           <p>\r\n//             <strong>{idx + 1}.</strong> {detail.question.content}\r\n//           </p>\r\n//           {detail.question.options.map((option) => (\r\n//             <li>\r\n//               {option.content}{' '}\r\n//               {option.correct === 1 ? <strong>Correct answer</strong> : null}{' '}\r\n//               {detail.option_id === option.id ? (\r\n//                 <strong>Your answer</strong>\r\n//               ) : null}{' '}\r\n//             </li>\r\n//           ))}\r\n//           {detail.is_correct === 1 ? (\r\n//             <strong style={{ color: 'green' }}>Your answer correct</strong>\r\n//           ) : (\r\n//             <strong style={{ color: 'red' }}>Your answer incorrect</strong>\r\n//           )}\r\n//           <hr />\r\n//         </div>\r\n//       );\r\n//     });\r\n// }\r\n","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\dashboard\\Dashboard.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\authReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userPackagesReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userTestReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userAttemptDetailsReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userQuestionReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userTestResultReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userAttemptReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userTestsReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\grandTestsReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\userQuestionsReducer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\reducers\\cartReducers.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\student\\TestQuestion.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\layouts\\pages\\PageLayout.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\layouts\\dashboard\\DashboardLayout.js",["229"],"import React, { useEffect } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport Sidebar from '../../../sidebar/Sidebar';\r\nimport { isAuthenticated } from '../../../helpers/methods';\r\nimport DropdownMenu from '../../custom/DropdownMenu/DropdownMenu';\r\n\r\nfunction DashboardLayout({ children, history }) {\r\n  useEffect(() => {\r\n    if (!isAuthenticated()) {\r\n      history.push('/login');\r\n    }\r\n  }, [history]);\r\n  return (\r\n    <div className='dash-top-bg'>\r\n      <Sidebar />\r\n      <header>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-lg-12 text-center'>\r\n              {/* <nav id='dashboard_main' className='mobile-dashboard'>\r\n                <div className='dashboard-header'>\r\n                  <Link className='btn-close float-right'>\r\n                    {' '}\r\n                    <i className='fa fa-times'></i>{' '}\r\n                  </Link>\r\n                </div>\r\n                <div className='student_info'>\r\n                  <DropdownMenu />\r\n                </div>\r\n                <ul className='navbar-nav'>\r\n                  <li className='nav-item active'>\r\n                    {' '}\r\n                    <Link\r\n                      className='nav-link'\r\n                      to={`${process.env.PUBLIC_URL}/dashboard`}\r\n                    >\r\n                      Dashboard{' '}\r\n                    </Link>{' '}\r\n                  </li>\r\n                  <li className='nav-item'>\r\n                    <Link\r\n                      className='nav-link'\r\n                      to={`${process.env.PUBLIC_URL}/about`}\r\n                    >\r\n                      {' '}\r\n                      About{' '}\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item'>\r\n                    <Link\r\n                      className='nav-link'\r\n                      to={`${process.env.PUBLIC_URL}/services`}\r\n                    >\r\n                      {' '}\r\n                      Services{' '}\r\n                    </Link>\r\n                  </li>\r\n                  <li className='nav-item dropdown'>\r\n                    <Link\r\n                      className='nav-link  dropdown-toggle'\r\n                      to={`${process.env.PUBLIC_URL}/services`}\r\n                      data-toggle='dropdown'\r\n                    >\r\n                      {' '}\r\n                      More items{' '}\r\n                    </Link>\r\n                    <ul className='dropdown-menu'>\r\n                      <li>\r\n                        <Link\r\n                          className='dropdown-item'\r\n                          to={`${process.env.PUBLIC_URL}`}\r\n                        >\r\n                          {' '}\r\n                          Submenu item 1\r\n                        </Link>\r\n                      </li>\r\n                      <li>\r\n                        <Link\r\n                          className='dropdown-item'\r\n                          to={`${process.env.PUBLIC_URL}`}\r\n                        >\r\n                          {' '}\r\n                          Submenu item 2{' '}\r\n                        </Link>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </nav> */}\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/images/medco-logo1.png`}\r\n                alt='logo'\r\n              />\r\n              <div className='dash-b pt-4'>\r\n                {/* <span className='notification'>\r\n                  <i className='fa fa-bell-o' aria-hidden='true'></i>\r\n                </span> */}\r\n                {/* <a href='/' className='name-ico' data-toggle='dropdown'>\r\n                  R\r\n                </a>\r\n                <div className='dropdown-menu'>\r\n                  <a className='dropdown-item' href='/'>\r\n                    Link 1\r\n                  </a>\r\n                  <a className='dropdown-item' href='/'>\r\n                    Link 2\r\n                  </a>\r\n                  <a className='dropdown-item' href='/'>\r\n                    Link 3\r\n                  </a>\r\n                </div> */}\r\n                <DropdownMenu />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(DashboardLayout);\r\n","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\layouts\\auth\\AuthLayout.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Loader\\LottiesLoader.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Loader\\LottiesContentLoader.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Timer\\Timer.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\actions\\types.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\actions\\index.js",["230","231","232","233","234"],"import {\r\n  AUTH_USER,\r\n  AUTH_ERROR,\r\n  USER_QUESTIONS,\r\n  TEST_QUESTION,\r\n  TEST_QUESTION_ERROR,\r\n  USER_PACKAGES_ERROR,\r\n  USER_TESTS_ERROR,\r\n  USER_TESTS_SUCCESS,\r\n  USER_PACKAGES_SUCCESS,\r\n  TEST_ATTEMPT_SUCCESS,\r\n  TEST_ATTEMPT_ERROR,\r\n  TEST_ATTEMPT_DETAILS_RESET,\r\n  TEST_ATTEMPT_DETAILS_SUCCESS,\r\n  TEST_ATTEMPT_DETAILS_ERROR,\r\n  USER_QUESTIONS_INCREASE_UPDATE,\r\n  USER_QUESTIONS_DECREASE_UPDATE,\r\n  TEST_ATTEMPT_UPDATE_ERROR,\r\n  TEST_ATTEMPT_UPDATE_SUCCESS,\r\n  TEST_RESULT_SUCCESS,\r\n  TEST_RESULT_ERROR,\r\n  TEST_QUESTION_BOOKMARK_ERROR,\r\n  TEST_QUESTION_BOOKMARK_SUCCESS,\r\n  TEST_ATTEMPT_DETAILS_COLORING,\r\n  ADD_CART_SUCCESS,\r\n  ADD_CART_ERROR,\r\n  ADD_CART_LOADING,\r\n  USER_SUPPORT_LOADING,\r\n  USER_SUPPORT_ERROR,\r\n  USER_SUPPORT_SUCCESS,\r\n  CART_RESET,\r\n  REMOVE_FROM_CART,\r\n  USER_PACKAGES_LOADING,\r\n  TEST_QUESTION_LOADING,\r\n  USER_TEST_SUCCESS,\r\n  HOMEPAGE_GRAND_TESTS_SUCCESS,\r\n  HOMEPAGE_GRAND_TESTS_ERROR,\r\n  USER_TESTS_LOADING,\r\n} from './types';\r\nimport medico from '../api/medico';\r\n\r\nexport const registerUser =\r\n  (formProps, redirect, isLoading) => async (dispatch) => {\r\n    try {\r\n      const response = await medico.post('/register', formProps);\r\n      const authUser = { token: response.data.token, user: response.data.user };\r\n      dispatch({ type: AUTH_USER, payload: authUser });\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      redirect();\r\n    } catch (e) {\r\n      dispatch({ type: AUTH_ERROR, payload: e.response.data.error });\r\n      isLoading();\r\n    }\r\n  };\r\n\r\nexport const loginUser =\r\n  (formProps, redirect, isLoading) => async (dispatch) => {\r\n    try {\r\n      const response = await medico.post('/login', formProps);\r\n      const authUser = { token: response.data.token, user: response.data.user };\r\n      dispatch({ type: AUTH_USER, payload: authUser });\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      redirect();\r\n    } catch (e) {\r\n      dispatch({ type: AUTH_ERROR, payload: 'Invalid Email or Password' });\r\n      isLoading();\r\n    }\r\n  };\r\n\r\nexport const logoutUser = (token, callback) => async (dispatch) => {\r\n  //const response = await store.post(`/logout?token=${token}`);\r\n\r\n  dispatch({ type: AUTH_USER, payload: '' });\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n  callback();\r\n};\r\n\r\nexport const getUserPackages = (token, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_PACKAGES_LOADING });\r\n    const response = await medico.get(`/student/${id}/packages`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch({ type: USER_PACKAGES_SUCCESS, payload: response.data.packages });\r\n  } catch (e) {\r\n    dispatch({ type: USER_PACKAGES_ERROR, payload: 'package error' });\r\n    // isLoading();\r\n  }\r\n};\r\n\r\n// Support and Help \r\n// export const helpSupport = (token, id) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: ADD_CART_LOADING,\r\n//     });\r\n//     const response = await medico.get(`support/${id}`, {\r\n//       headers: { Authorization: `Bearer ${token}` },\r\n//     });\r\n//     dispatch({\r\n//       type: ADD_CART_SUCCESS,\r\n//       payload: response.data.help,\r\n//     });\r\n//     localStorage.setItem('support', JSON.stringify(getState().support));\r\n//   } catch (e) {\r\n//     dispatch({\r\n//       type: ADD_CART_ERROR,\r\n//       payload: e.response.data.error,\r\n//     });\r\n//   }\r\n// };\r\n\r\nexport const getPackageTests = (token, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_TESTS_LOADING });\r\n    const response = await medico.get(`/student/packages/${id}/tests`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch({\r\n      type: USER_TESTS_SUCCESS,\r\n      payload: { tests: response.data.tests, id },\r\n    });\r\n  } catch (e) {\r\n    dispatch({ type: USER_TESTS_ERROR, payload: e.response.data.error });\r\n    // isLoading();\r\n  }\r\n};\r\n\r\nexport const userTest = (test) => async (dispatch) => {\r\n  dispatch({ type: USER_TEST_SUCCESS, payload: test });\r\n};\r\n\r\nexport const attemptTest = (token, id) => async (dispatch) => {\r\n  try {\r\n    const response = await medico.get(`/student/test/${id}/attempt`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch({ type: TEST_ATTEMPT_SUCCESS, payload: response.data.attempt });\r\n    dispatch({ type: USER_QUESTIONS, payload: response.data });\r\n    dispatch({\r\n      type: TEST_ATTEMPT_DETAILS_COLORING,\r\n      payload: response.data.attemptDetails,\r\n    });\r\n  } catch (e) {\r\n    dispatch({ type: TEST_ATTEMPT_ERROR, payload: e.response.data.error });\r\n    // isLoading();\r\n  }\r\n};\r\n\r\nexport const increaseCurrentQuestion = () => (dispatch) => {\r\n  dispatch({ type: USER_QUESTIONS_INCREASE_UPDATE });\r\n};\r\n\r\nexport const decreaseCurrentQuestion = () => (dispatch) => {\r\n  dispatch({ type: USER_QUESTIONS_DECREASE_UPDATE });\r\n  // dispatch({ type: TEST_ATTEMPT_DETAILS_RESET });\r\n};\r\n\r\nexport const resetAttemptDetails = () => (dispatch) => {\r\n  dispatch({ type: TEST_ATTEMPT_DETAILS_RESET });\r\n};\r\n\r\nexport const getQuestionById = (token, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TEST_QUESTION_LOADING });\r\n    const response = await medico.get(`/student/questions/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch({ type: TEST_QUESTION, payload: response.data.question });\r\n  } catch (e) {\r\n    dispatch({ type: TEST_QUESTION_ERROR, payload: e.response.data.error });\r\n    // isLoading();\r\n  }\r\n};\r\n\r\nexport const storeAttemptDetails =\r\n  (token, attempt_id, question_id, option_id) => async (dispatch) => {\r\n    try {\r\n      const response = await medico.post(\r\n        `/student/attempt`,\r\n        {\r\n          attempt_id,\r\n          question_id,\r\n          option_id,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: TEST_ATTEMPT_DETAILS_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: TEST_ATTEMPT_DETAILS_ERROR,\r\n        payload: e.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const fetchCorrectResult =\r\n  (token, attempt_id, question_id) => async (dispatch) => {\r\n    try {\r\n      const response = await medico.post(\r\n        `/student/detail/solution`,\r\n        {\r\n          attempt_id,\r\n          question_id,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: TEST_ATTEMPT_DETAILS_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: TEST_ATTEMPT_DETAILS_ERROR,\r\n        payload: e.response.data.error,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const setBookmarkStatus =\r\n  (token, attempt_id, question_id) => async (dispatch) => {\r\n    try {\r\n      const response = await medico.post(\r\n        `/student/attempt-details/bookmark`,\r\n        {\r\n          attempt_id,\r\n          question_id,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      dispatch({ type: TEST_QUESTION_BOOKMARK_SUCCESS });\r\n      dispatch({\r\n        type: TEST_ATTEMPT_DETAILS_COLORING,\r\n        payload: response.data.attemptDetails,\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: TEST_QUESTION_BOOKMARK_ERROR,\r\n        payload: 'error while setting bookmark status',\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateAttempt = (token, id) => async (dispatch) => {\r\n  try {\r\n    const response = await medico.put(\r\n      `/student/attempt/${id}/update`,\r\n      {},\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: TEST_ATTEMPT_UPDATE_SUCCESS,\r\n      payload: {},\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: TEST_ATTEMPT_UPDATE_ERROR,\r\n      payload: e.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getTestResult = (token, id) => async (dispatch) => {\r\n  try {\r\n    const response = await medico.get(`/student/test/${id}/result`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    console.log('result', response);\r\n    dispatch({\r\n      type: TEST_RESULT_SUCCESS,\r\n      payload: response.data.result,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: TEST_RESULT_ERROR,\r\n      payload: 'Some error',\r\n    });\r\n  }\r\n};\r\n\r\nexport const addItemToCart = (token, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ADD_CART_LOADING,\r\n    });\r\n    const response = await medico.get(`package/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch({\r\n      type: ADD_CART_SUCCESS,\r\n      payload: response.data.package,\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart));\r\n  } catch (e) {\r\n    dispatch({\r\n      type: ADD_CART_ERROR,\r\n      payload: e.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeItemFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({ type: REMOVE_FROM_CART, payload: id });\r\n  localStorage.setItem('cart', JSON.stringify(getState().cart));\r\n};\r\n\r\nexport const buyUserPackage = (token, items) => async (dispatch) => {\r\n  try {\r\n    const response = await medico.post(\r\n      `/student/package/buy`,\r\n      {\r\n        items: JSON.stringify(items),\r\n      },\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n    dispatch({ type: CART_RESET });\r\n    localStorage.removeItem('cart');\r\n  } catch (e) {\r\n    dispatch({ type: USER_PACKAGES_ERROR, payload: e.response.data.error });\r\n  }\r\n};\r\n\r\nexport const getGrandTests = () => async (dispatch) => {\r\n  try {\r\n    const response = await medico.get(`grand-tests`);\r\n    dispatch({\r\n      type: HOMEPAGE_GRAND_TESTS_SUCCESS,\r\n      payload: response.data.grand_tests,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: HOMEPAGE_GRAND_TESTS_ERROR,\r\n      payload: e.response.data.error,\r\n    });\r\n  }\r\n};\r\n","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\Loader\\LottiesMultiContentLoader.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\helpers\\methods.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\sidebar\\Sidebar.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\custom\\DropdownMenu\\DropdownMenu.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\api\\medico.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\common\\hooks\\useDetectOutsideClick.js",[],"C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Counselling.js",["235","236","237"],"import PageLayout from '../common/layouts/pages/PageLayout';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, {useState, useEffect } from 'react';\r\n\r\nexport default function Counselling() {\r\n\r\n\r\n  const [coun , setcoun ]=useState([]);\r\n  useEffect( async ()=>{\r\n  let result = await fetch(\"http://localhost:8000/api/showc\");\r\n  result =await result.json();\r\n  setcoun(result)\r\n  },[])\r\n  console.warn(\"coun\",coun) \r\n\r\n\r\n  return (\r\n\r\n    <PageLayout>\r\n\r\n      <section class=\"doc-icon\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-4 col-md-4 col-12 d-flex align-items-center\">\r\n              <div class=\"\">\r\n                <h1 class=\"text-uppercase\"><b>Counseling </b>Profile</h1>\r\n                <div class=\"line\"></div>\r\n                <p>Select Your Counselor</p>\r\n              </div></div>\r\n               <div class=\"col-lg-8 col-md-8 col-12\">\r\n               <div class=\"row\">\r\n                    {\r\n                      coun.map((sau)=>                             \r\n                  <div class=\"col-md-4 col-lg-4 col-12\">\r\n                  <div class=\"p-3 text-center counseler-div\">                       \r\n                  <div class=\"image-counseler\">\r\n                  <img src={\"http://127.0.0.1:8000/Counselling/\"+sau.profile_image} />\r\n                  </div>\r\n                  <h4><b>{sau.name}</b></h4>\r\n                  <p class=\"text-uppercase blue\">{sau.specilization}</p>\r\n                  <p><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> {sau.place}</p>                    \r\n                  </div>\r\n                  </div>\r\n                    )\r\n                  }\r\n                </div>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n              \r\n      </section>\r\n      <section class=\"bg-sea-gr\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-12 text-center\">\r\n              <h1><b>Regestration</b> Form</h1>\r\n              <div class=\"line1\"></div>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <input type=\"text\" id=\"inputName\" class=\"form-control\" placeholder=\"Name\" required autofocus />\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <input type=\"text\" id=\"inputAge\" class=\"form-control\" placeholder=\"Age\" required autofocus />\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <select class=\"form-control\">\r\n                <option>Qualification</option>\r\n                <option>MSC</option>\r\n                <option>BSC</option>\r\n                <option>12</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <input type=\"text\" id=\"inputAddress\" class=\"form-control\" placeholder=\"Address\" required autofocus />\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <select class=\"form-control\">\r\n                <option>Education ins</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email\" required autofocus />\r\n            </div>\r\n          </div>\r\n        <br></br>\r\n\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <select class=\"form-control\">\r\n                <option>Sex</option>\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n                <option>Other</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-12\"><input type=\"tel\" id=\"inputAge\" class=\"form-control\" placeholder=\"Phone No\" required autofocus /></div>\r\n                <div class=\"col-lg-6 col-md-6 col-12\"><input type=\"tel\" id=\"inputAge\" class=\"form-control\" placeholder=\"Alternate No\" required autofocus /></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        <br></br>\r\n          <div class=\"row\">\r\n              <div class=\"col-lg-6 col-md-6 col-12\">\r\n              <select class=\"form-control\">\r\n                <option>Query</option>\r\n                <option>Personal (200Rs)</option>\r\n                <option>Medical (200Rs)</option>\r\n                <option>Education (200Rs)</option>\r\n              </select>\r\n\t           </div>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <h6 class=\"mb-3\">Condition Query</h6>\r\n                <textarea class=\"form-control\" placeholder=\"Counselor\" required autofocus></textarea>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center\"> <br></br>\r\n                <a class=\"btn btn-success\" href=\"\">Submit</a>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n      </section>\r\n   \r\n</PageLayout>\r\n\r\n              );\r\n}\r\n","C:\\xampp\\htdocs\\justc\\Medocv2\\medico_frontend\\src\\components\\pages\\Test.js",["238"],"import PageLayout from '../common/layouts/pages/PageLayout';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, {useState, useEffect } from 'react';\r\n\r\nexport default function Test() {\r\n\r\n    const [testt , settestt ]=useState([]);\r\nuseEffect( async ()=>{\r\nlet result = await fetch(\"http://localhost:8000/api/tests\");\r\nresult =await result.json();\r\nsettestt(result)\r\n},[])\r\nconsole.warn(\"test\",testt)  \r\n\r\n\r\n    return (\r\n\r\n        <PageLayout>\r\n             <h1 class=\"text-center\">\r\n                  <b>Test</b> / Details\r\n                  <br />\r\n                </h1>\r\n {\r\n                  testt.map((tws)=>\r\n              <div className='col-lg-6 col-md-6 col-sm-12'>\r\n              <div className='conselling-b1'>\r\n               \r\n                <ul className='list-arrow'>\r\n                  <li> Name: {tws.name}</li>\r\n                  <li>Total Question:{ tws.total_questions} </li>\r\n                  <li>Duration: { tws.duration}</li>\r\n                  <li>Type: { tws.type}</li>\r\n                  <li>Package: Merged</li>\r\n                  <li>Score: { tws.score}</li>\r\n                  <li>Summary: { tws.summary}</li>\r\n                </ul>\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n        \r\n                    )\r\n                  }\r\n\r\n\r\n\r\n</PageLayout>\r\n\r\n);\r\n}\r\n",{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":11,"column":24,"nodeType":"245","messageId":"246","endLine":11,"endColumn":38},{"ruleId":"247","severity":1,"message":"248","line":18,"column":47,"nodeType":"249","messageId":"250","endLine":18,"endColumn":49},{"ruleId":"247","severity":1,"message":"248","line":56,"column":36,"nodeType":"249","messageId":"250","endLine":56,"endColumn":38},{"ruleId":"243","severity":1,"message":"251","line":14,"column":11,"nodeType":"245","messageId":"246","endLine":14,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":21,"column":14,"nodeType":"254","endLine":25,"endColumn":2},{"ruleId":"252","severity":1,"message":"253","line":31,"column":12,"nodeType":"254","endLine":35,"endColumn":2},{"ruleId":"252","severity":1,"message":"253","line":39,"column":12,"nodeType":"254","endLine":43,"endColumn":2},{"ruleId":"252","severity":1,"message":"253","line":47,"column":12,"nodeType":"254","endLine":51,"endColumn":2},{"ruleId":"252","severity":1,"message":"253","line":55,"column":12,"nodeType":"254","endLine":59,"endColumn":2},{"ruleId":"252","severity":1,"message":"253","line":63,"column":12,"nodeType":"254","endLine":67,"endColumn":2},{"ruleId":"252","severity":1,"message":"253","line":71,"column":12,"nodeType":"254","endLine":75,"endColumn":2},{"ruleId":"243","severity":1,"message":"255","line":5,"column":10,"nodeType":"245","messageId":"246","endLine":5,"endColumn":24},{"ruleId":"243","severity":1,"message":"256","line":14,"column":11,"nodeType":"245","messageId":"246","endLine":14,"endColumn":16},{"ruleId":"243","severity":1,"message":"257","line":47,"column":10,"nodeType":"245","messageId":"246","endLine":47,"endColumn":13},{"ruleId":"243","severity":1,"message":"258","line":47,"column":15,"nodeType":"245","messageId":"246","endLine":47,"endColumn":21},{"ruleId":"243","severity":1,"message":"259","line":48,"column":10,"nodeType":"245","messageId":"246","endLine":48,"endColumn":19},{"ruleId":"243","severity":1,"message":"260","line":48,"column":21,"nodeType":"245","messageId":"246","endLine":48,"endColumn":33},{"ruleId":"243","severity":1,"message":"261","line":49,"column":18,"nodeType":"245","messageId":"246","endLine":49,"endColumn":27},{"ruleId":"243","severity":1,"message":"262","line":50,"column":18,"nodeType":"245","messageId":"246","endLine":50,"endColumn":27},{"ruleId":"243","severity":1,"message":"263","line":69,"column":9,"nodeType":"245","messageId":"246","endLine":69,"endColumn":15},{"ruleId":"243","severity":1,"message":"264","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":13},{"ruleId":"243","severity":1,"message":"265","line":8,"column":10,"nodeType":"245","messageId":"246","endLine":8,"endColumn":17},{"ruleId":"243","severity":1,"message":"266","line":22,"column":11,"nodeType":"245","messageId":"246","endLine":22,"endColumn":19},{"ruleId":"243","severity":1,"message":"256","line":27,"column":13,"nodeType":"245","messageId":"246","endLine":27,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":29,"column":49,"nodeType":"249","messageId":"250","endLine":29,"endColumn":51},{"ruleId":"252","severity":1,"message":"267","line":65,"column":8,"nodeType":"268","endLine":65,"endColumn":10,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"248","line":89,"column":44,"nodeType":"249","messageId":"250","endLine":89,"endColumn":46},{"ruleId":"243","severity":1,"message":"270","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"270","line":2,"column":22,"nodeType":"245","messageId":"246","endLine":2,"endColumn":26},{"ruleId":"243","severity":1,"message":"271","line":28,"column":3,"nodeType":"245","messageId":"246","endLine":28,"endColumn":23},{"ruleId":"243","severity":1,"message":"272","line":29,"column":3,"nodeType":"245","messageId":"246","endLine":29,"endColumn":21},{"ruleId":"243","severity":1,"message":"273","line":30,"column":3,"nodeType":"245","messageId":"246","endLine":30,"endColumn":23},{"ruleId":"243","severity":1,"message":"274","line":258,"column":11,"nodeType":"245","messageId":"246","endLine":258,"endColumn":19},{"ruleId":"243","severity":1,"message":"274","line":323,"column":11,"nodeType":"245","messageId":"246","endLine":323,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":9,"column":14,"nodeType":"254","endLine":13,"endColumn":4},{"ruleId":"275","severity":1,"message":"276","line":37,"column":19,"nodeType":"277","endLine":37,"endColumn":87},{"ruleId":"278","severity":1,"message":"279","line":140,"column":17,"nodeType":"277","endLine":140,"endColumn":52},{"ruleId":"252","severity":1,"message":"253","line":8,"column":12,"nodeType":"254","endLine":12,"endColumn":2},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'setAttachement' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'grandTests' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'buyUserPackage' is defined but never used.","'token' is assigned a value but never used.","'pid' is assigned a value but never used.","'setPid' is assigned a value but never used.","'studentid' is assigned a value but never used.","'setStudentid' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'result' is assigned a value but never used.","'Login' is defined but never used.","'support' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTicketList'. Either include it or remove the dependency array.","ArrayExpression",["282"],"'Link' is defined but never used.","'USER_SUPPORT_LOADING' is defined but never used.","'USER_SUPPORT_ERROR' is defined but never used.","'USER_SUPPORT_SUCCESS' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},"Update the dependencies array to be: [setTicketList]",{"range":"285","text":"286"},[2136,2138],"[setTicketList]"]